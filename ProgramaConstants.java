/* Generated By:JavaCC: Do not edit this line. ProgramaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ProgramaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IMPRESION = 5;
  /** RegularExpression Id. */
  int OPERADORRELACIONAL = 6;
  /** RegularExpression Id. */
  int CAPTURARDATO = 7;
  /** RegularExpression Id. */
  int OPERACIONESCARACTER = 8;
  /** RegularExpression Id. */
  int ESPACIONOMBRE = 9;
  /** RegularExpression Id. */
  int ABRIRARCHIVO = 10;
  /** RegularExpression Id. */
  int CERRARARCHIVO = 11;
  /** RegularExpression Id. */
  int RENOMBRARARCHIVO = 12;
  /** RegularExpression Id. */
  int REMOVERARCHIVO = 13;
  /** RegularExpression Id. */
  int ARCHIVOTEMPORAL = 14;
  /** RegularExpression Id. */
  int LEERARCHIVO = 15;
  /** RegularExpression Id. */
  int IMPRIMIRARCHIVO = 16;
  /** RegularExpression Id. */
  int LIMPIARBUFFER = 17;
  /** RegularExpression Id. */
  int COPIARCADENA = 18;
  /** RegularExpression Id. */
  int COMPARARCADENA = 19;
  /** RegularExpression Id. */
  int ENCONTRARCADENA = 20;
  /** RegularExpression Id. */
  int CONCATENARCADENA = 21;
  /** RegularExpression Id. */
  int LONGITUDCADENA = 22;
  /** RegularExpression Id. */
  int MENORENTERO = 23;
  /** RegularExpression Id. */
  int FUNCIONBESSEL = 24;
  /** RegularExpression Id. */
  int LOGARITMO = 25;
  /** RegularExpression Id. */
  int RAIZ = 26;
  /** RegularExpression Id. */
  int POTENCIA = 27;
  /** RegularExpression Id. */
  int EXPONENCIAL = 28;
  /** RegularExpression Id. */
  int FUNCIONESTRIGONOMETRICAS = 29;
  /** RegularExpression Id. */
  int FUNCIONESTRIGONOMETRICASINV = 30;
  /** RegularExpression Id. */
  int TRUNCARVALOR = 31;
  /** RegularExpression Id. */
  int REDONDEONUMERO = 32;
  /** RegularExpression Id. */
  int NUMEROALEATORIO = 33;
  /** RegularExpression Id. */
  int VALORABSOLUTO = 34;
  /** RegularExpression Id. */
  int ASIGNARMEMORIA = 35;
  /** RegularExpression Id. */
  int LIBERARMEMORIA = 36;
  /** RegularExpression Id. */
  int PARENTESISAPERTURA = 37;
  /** RegularExpression Id. */
  int PARENTESISCERRADURA = 38;
  /** RegularExpression Id. */
  int LLAVEAPERTURA = 39;
  /** RegularExpression Id. */
  int LLAVECERRADURA = 40;
  /** RegularExpression Id. */
  int CORCHETEAPERTURA = 41;
  /** RegularExpression Id. */
  int CORCHETECERRADURA = 42;
  /** RegularExpression Id. */
  int PUNTO = 43;
  /** RegularExpression Id. */
  int COMA = 44;
  /** RegularExpression Id. */
  int SEMICOLON = 45;
  /** RegularExpression Id. */
  int DORMIR = 46;
  /** RegularExpression Id. */
  int RETRASAR = 47;
  /** RegularExpression Id. */
  int DIRECTORIO = 48;
  /** RegularExpression Id. */
  int LLAMAR = 49;
  /** RegularExpression Id. */
  int MODULO = 50;
  /** RegularExpression Id. */
  int NUEVOTIPO = 51;
  /** RegularExpression Id. */
  int LISTA = 52;
  /** RegularExpression Id. */
  int PRIMEROLISTA = 53;
  /** RegularExpression Id. */
  int ULTIMOLISTA = 54;
  /** RegularExpression Id. */
  int TUPLA = 55;
  /** RegularExpression Id. */
  int PULSOSDERELOJ = 56;
  /** RegularExpression Id. */
  int OPERACIONESSTRINGNUMERO = 57;
  /** RegularExpression Id. */
  int ORDENAR = 58;
  /** RegularExpression Id. */
  int RANGO = 59;
  /** RegularExpression Id. */
  int OPERACIONESBIT = 60;
  /** RegularExpression Id. */
  int MOVERELEMENTO = 61;
  /** RegularExpression Id. */
  int AYUDA = 62;
  /** RegularExpression Id. */
  int QUICKSORT = 63;
  /** RegularExpression Id. */
  int COLA = 64;
  /** RegularExpression Id. */
  int ARROBA = 65;
  /** RegularExpression Id. */
  int INICIOCRONOMETRO = 66;
  /** RegularExpression Id. */
  int FINCRONOMETRO = 67;
  /** RegularExpression Id. */
  int OBTENER = 68;
  /** RegularExpression Id. */
  int ASIGNAR = 69;
  /** RegularExpression Id. */
  int SOCKET = 70;
  /** RegularExpression Id. */
  int SERVIDORSOCKET = 71;
  /** RegularExpression Id. */
  int ENTRADADATOS = 72;
  /** RegularExpression Id. */
  int SALIDADATOSCLIENTE = 73;
  /** RegularExpression Id. */
  int SALIDADATOS = 74;
  /** RegularExpression Id. */
  int REMPLAZAR = 75;
  /** RegularExpression Id. */
  int CONVERTIR = 76;
  /** RegularExpression Id. */
  int LONGITUD = 77;
  /** RegularExpression Id. */
  int PILA = 78;
  /** RegularExpression Id. */
  int METERDATOPILA = 79;
  /** RegularExpression Id. */
  int SACARDATOPILA = 80;
  /** RegularExpression Id. */
  int CLONARPILA = 81;
  /** RegularExpression Id. */
  int MCD = 82;
  /** RegularExpression Id. */
  int MCM = 83;
  /** RegularExpression Id. */
  int ANALIZAGRAMATICA = 84;
  /** RegularExpression Id. */
  int PAR = 85;
  /** RegularExpression Id. */
  int PERTENECE = 86;
  /** RegularExpression Id. */
  int TODOS = 87;
  /** RegularExpression Id. */
  int ALGUNO = 88;
  /** RegularExpression Id. */
  int BOOLEANO = 89;
  /** RegularExpression Id. */
  int HACER = 90;
  /** RegularExpression Id. */
  int PARA = 91;
  /** RegularExpression Id. */
  int MIENTRAS = 92;
  /** RegularExpression Id. */
  int LAZO = 93;
  /** RegularExpression Id. */
  int CADAUNO = 94;
  /** RegularExpression Id. */
  int CONDICION = 95;
  /** RegularExpression Id. */
  int SINO = 96;
  /** RegularExpression Id. */
  int CASO = 97;
  /** RegularExpression Id. */
  int CONSTANTE = 98;
  /** RegularExpression Id. */
  int CLASE = 99;
  /** RegularExpression Id. */
  int LIMPIARCONSOLA = 100;
  /** RegularExpression Id. */
  int DETENER = 101;
  /** RegularExpression Id. */
  int ESTATICO = 102;
  /** RegularExpression Id. */
  int FLUJOCONTROL = 103;
  /** RegularExpression Id. */
  int MANEJOEXEPCIONES = 104;
  /** RegularExpression Id. */
  int INTENTAR = 105;
  /** RegularExpression Id. */
  int ATRAPAR = 106;
  /** RegularExpression Id. */
  int FINALIZAR = 107;
  /** RegularExpression Id. */
  int OPTIMIZACION = 108;
  /** RegularExpression Id. */
  int PORDEFECTO = 109;
  /** RegularExpression Id. */
  int REGRESAR = 110;
  /** RegularExpression Id. */
  int TIPOACCESO = 111;
  /** RegularExpression Id. */
  int TIPODATO = 112;
  /** RegularExpression Id. */
  int TIPOMETODO = 113;
  /** RegularExpression Id. */
  int ENUMERAR = 114;
  /** RegularExpression Id. */
  int SIZE = 115;
  /** RegularExpression Id. */
  int ESTRUCTURA = 116;
  /** RegularExpression Id. */
  int UNION = 117;
  /** RegularExpression Id. */
  int DESDE = 118;
  /** RegularExpression Id. */
  int CONTINUAR = 119;
  /** RegularExpression Id. */
  int IRA = 120;
  /** RegularExpression Id. */
  int PAQUETE = 121;
  /** RegularExpression Id. */
  int OTROLENGUAJE = 122;
  /** RegularExpression Id. */
  int EXPORTAR = 123;
  /** RegularExpression Id. */
  int EN = 124;
  /** RegularExpression Id. */
  int ES = 125;
  /** RegularExpression Id. */
  int BORRAR = 126;
  /** RegularExpression Id. */
  int NOOPERACION = 127;
  /** RegularExpression Id. */
  int DEFINIR = 128;
  /** RegularExpression Id. */
  int INCLUIR = 129;
  /** RegularExpression Id. */
  int SINCRONIZAR = 130;
  /** RegularExpression Id. */
  int HILO = 131;
  /** RegularExpression Id. */
  int NUMEROSINSIGNO = 132;
  /** RegularExpression Id. */
  int NUEVAINSTANCIA = 133;
  /** RegularExpression Id. */
  int ARREGLO = 134;
  /** RegularExpression Id. */
  int IMPLEMENTAR = 135;
  /** RegularExpression Id. */
  int SALIR = 136;
  /** RegularExpression Id. */
  int CERRAR = 137;
  /** RegularExpression Id. */
  int EMPEZAR = 138;
  /** RegularExpression Id. */
  int TERMINAR = 139;
  /** RegularExpression Id. */
  int PROCEDIMIENTO = 140;
  /** RegularExpression Id. */
  int EMPEZARMODULO = 141;
  /** RegularExpression Id. */
  int ASTERISCO = 142;
  /** RegularExpression Id. */
  int UNIDADESAUTILIZAR = 143;
  /** RegularExpression Id. */
  int OPERADORLOGICO = 144;
  /** RegularExpression Id. */
  int OPERADORMATEMATICO = 145;
  /** RegularExpression Id. */
  int OPERADORLOGICO_NOT = 146;
  /** RegularExpression Id. */
  int AMPERSON = 147;
  /** RegularExpression Id. */
  int ASIGNACION = 148;
  /** RegularExpression Id. */
  int VALOR = 149;
  /** RegularExpression Id. */
  int TIEMPO = 150;
  /** RegularExpression Id. */
  int CREAR = 151;
  /** RegularExpression Id. */
  int USAR = 152;
  /** RegularExpression Id. */
  int TABLA = 153;
  /** RegularExpression Id. */
  int EJECUTAR = 154;
  /** RegularExpression Id. */
  int LLAVE = 155;
  /** RegularExpression Id. */
  int INSERTAR = 156;
  /** RegularExpression Id. */
  int VALORES = 157;
  /** RegularExpression Id. */
  int CONTAR = 158;
  /** RegularExpression Id. */
  int FORANEO = 159;
  /** RegularExpression Id. */
  int VISTA = 160;
  /** RegularExpression Id. */
  int SELECCIONAR = 161;
  /** RegularExpression Id. */
  int UNIR = 162;
  /** RegularExpression Id. */
  int DONDE = 163;
  /** RegularExpression Id. */
  int EXISTE = 164;
  /** RegularExpression Id. */
  int DENTRO = 165;
  /** RegularExpression Id. */
  int TIPO = 166;
  /** RegularExpression Id. */
  int MAXIMO = 167;
  /** RegularExpression Id. */
  int MAXIMOLISTA = 168;
  /** RegularExpression Id. */
  int MINIMO = 169;
  /** RegularExpression Id. */
  int MINIMOLISTA = 170;
  /** RegularExpression Id. */
  int PROMEDIO = 171;
  /** RegularExpression Id. */
  int IMPORTAR = 172;
  /** RegularExpression Id. */
  int QUITARESPACIOS = 173;
  /** RegularExpression Id. */
  int REPLICAR = 174;
  /** RegularExpression Id. */
  int VOLTEAR = 175;
  /** RegularExpression Id. */
  int FORMATOENTRADA = 176;
  /** RegularExpression Id. */
  int COMENTAR = 177;
  /** RegularExpression Id. */
  int ACCESOCLASE = 178;
  /** RegularExpression Id. */
  int AFIRMACONDICION = 179;
  /** RegularExpression Id. */
  int COMILLAS = 180;
  /** RegularExpression Id. */
  int DOSPUNTOS = 181;
  /** RegularExpression Id. */
  int FLECHA = 182;
  /** RegularExpression Id. */
  int NUMERO = 183;
  /** RegularExpression Id. */
  int NUMERODEC = 184;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 185;
  /** RegularExpression Id. */
  int LETRAS = 186;
  /** RegularExpression Id. */
  int CADENA = 187;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<IMPRESION>",
    "<OPERADORRELACIONAL>",
    "<CAPTURARDATO>",
    "<OPERACIONESCARACTER>",
    "\"namespace\"",
    "\"fopen\"",
    "\"fclose\"",
    "\"rename\"",
    "\"remove\"",
    "\"tmpfile\"",
    "\"fscanf\"",
    "\"fprintf\"",
    "\"fflush\"",
    "\"strcpy\"",
    "\"strcmp\"",
    "\"strfind\"",
    "\"strcat\"",
    "\"strlen\"",
    "\"ceiling\"",
    "\"jn\"",
    "<LOGARITMO>",
    "\"sqrt\"",
    "\"pow\"",
    "\"exp\"",
    "<FUNCIONESTRIGONOMETRICAS>",
    "<FUNCIONESTRIGONOMETRICASINV>",
    "\"trunc\"",
    "<REDONDEONUMERO>",
    "\"rand\"",
    "<VALORABSOLUTO>",
    "<ASIGNARMEMORIA>",
    "\"free\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\"sleep\"",
    "\"delay\"",
    "\"dir\"",
    "\"call\"",
    "\"module\"",
    "\"newType\"",
    "\"List\"",
    "<PRIMEROLISTA>",
    "<ULTIMOLISTA>",
    "\"tuple\"",
    "\"clock\"",
    "<OPERACIONESSTRINGNUMERO>",
    "\"sort\"",
    "\"range\"",
    "\"~\"",
    "<MOVERELEMENTO>",
    "\"help\"",
    "\"qsort\"",
    "\"queue\"",
    "\"@\"",
    "\"tic\"",
    "\"toc\"",
    "\"get\"",
    "\"set\"",
    "\"Socket\"",
    "\"ServerSocket\"",
    "\"InputStream\"",
    "\"OutputStream\"",
    "\"DataOutputStream\"",
    "\"replace\"",
    "\"Convert\"",
    "\"length\"",
    "\"stack\"",
    "\"push\"",
    "\"pop\"",
    "\"clone\"",
    "\"gcd\"",
    "\"lcm\"",
    "\"Parse\"",
    "\"even\"",
    "\"elem\"",
    "\"all\"",
    "\"any\"",
    "<BOOLEANO>",
    "\"do\"",
    "\"for\"",
    "\"while\"",
    "\"loop\"",
    "\"foreach\"",
    "<CONDICION>",
    "<SINO>",
    "<CASO>",
    "\"const\"",
    "\"class\"",
    "\"clear\"",
    "\"break\"",
    "\"static\"",
    "\"switch\"",
    "<MANEJOEXEPCIONES>",
    "\"try\"",
    "\"catch\"",
    "\"finally\"",
    "\"volatile\"",
    "\"default\"",
    "<REGRESAR>",
    "<TIPOACCESO>",
    "<TIPODATO>",
    "\"void\"",
    "\"enum\"",
    "\"sizeof\"",
    "\"struct\"",
    "\"union\"",
    "\"from\"",
    "\"continue\"",
    "<IRA>",
    "\"package\"",
    "\"native\"",
    "\"export\"",
    "\"in\"",
    "\"is\"",
    "<BORRAR>",
    "\"nop\"",
    "\"#define\"",
    "\"#include\"",
    "\"synchronized\"",
    "\"Thread\"",
    "\"unsigned\"",
    "\"new\"",
    "\"Array\"",
    "\"implements\"",
    "<SALIR>",
    "\"close\"",
    "\"begin\"",
    "\"end\"",
    "\"procedure\"",
    "\"unit\"",
    "\"*\"",
    "\"uses\"",
    "<OPERADORLOGICO>",
    "<OPERADORMATEMATICO>",
    "\"not\"",
    "\"&\"",
    "\"=\"",
    "\"value\"",
    "<TIEMPO>",
    "\"create\"",
    "\"use\"",
    "\"table\"",
    "\"exec\"",
    "\"key\"",
    "\"insert\"",
    "\"values\"",
    "\"count\"",
    "\"foreign\"",
    "\"view\"",
    "\"select\"",
    "\"join\"",
    "\"where\"",
    "\"exist\"",
    "\"into\"",
    "\"type\"",
    "\"max\"",
    "\"maximum\"",
    "\"min\"",
    "\"minimum\"",
    "\"avg\"",
    "\"import\"",
    "\"ltrim\"",
    "\"replicate\"",
    "\"reverse\"",
    "<FORMATOENTRADA>",
    "\"//\"",
    "<ACCESOCLASE>",
    "\"assert\"",
    "\"\\\"\"",
    "\":\"",
    "\"=>\"",
    "<NUMERO>",
    "<NUMERODEC>",
    "<IDENTIFICADOR>",
    "<LETRAS>",
    "<CADENA>",
  };

}
